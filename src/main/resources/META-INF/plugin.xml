<!-- Plugin Configuration File. Read more: https://plugins.jetbrains.com/docs/intellij/plugin-configuration-file.html -->
<idea-plugin>
  <!-- Unique identifier of the plugin. It should be FQN. It cannot be changed between the plugin versions. -->
  <id>com.das747.ebnf</id>

  <!-- Public plugin name should be written in Title Case.
       Guidelines: https://plugins.jetbrains.com/docs/marketplace/plugin-overview-page.html#plugin-name -->
  <name>Ebnf Support</name>

  <!-- A displayed Vendor name or Organization ID displayed on the Plugins Page. -->
  <vendor email="support@yourcompany.com" url="https://www.yourcompany.com">YourCompany</vendor>

  <!-- Description of the plugin displayed on the Plugin Page and IDE Plugin Manager.
       Simple HTML elements (text formatting, paragraphs, and lists) can be added inside of <![CDATA[ ]]> tag.
       Guidelines: https://plugins.jetbrains.com/docs/marketplace/plugin-overview-page.html#plugin-description -->
  <description><![CDATA[
    Enter short description for your plugin here.<br>
    <em>most HTML tags may be used</em>
  ]]></description>

  <!-- Product and plugin compatibility requirements.
       Read more: https://plugins.jetbrains.com/docs/intellij/plugin-compatibility.html -->
  <depends>com.intellij.modules.platform</depends>
  <depends>com.intellij.java</depends>
  <!-- Extension points defined by the plugin.
       Read more: https://plugins.jetbrains.com/docs/intellij/plugin-extension-points.html -->
  <extensions defaultExtensionNs="com.intellij">
    <fileType
      name="EBNF file"
      implementationClass="com.das747.ebnfplugin.lang.EbnfFileType"
      fieldName="INSTANCE"
      language="EBNF"
      extensions="ebnf"/>
    <lang.parserDefinition
      language="EBNF"
      implementationClass="com.das747.ebnfplugin.lang.EbnfParserDefinition"/>
    <lang.syntaxHighlighterFactory
      language="EBNF"
      implementationClass="com.das747.ebnfplugin.lang.EbnfSyntaxHighlighterFactory"/>
    <annotator
      language="EBNF"
      implementationClass="com.das747.ebnfplugin.ide.EbnfAnnotator"/>
    <lang.elementManipulator
      forClass="com.das747.ebnfplugin.lang.psi.EbnfNonTerminal"
      implementationClass="com.das747.ebnfplugin.lang.psi.EbnfNonTerminalElementManipulator"/>
    <lang.findUsagesProvider
      language="EBNF"
      implementationClass="com.das747.ebnfplugin.lang.EbnfFindUsagesProvider"/>
    <gotoSymbolContributor
      implementation="com.das747.ebnfplugin.lang.EbnfChooseByNameContributor"/>
    <lang.psiStructureViewFactory
      language="EBNF"
      implementationClass="com.das747.ebnfplugin.ide.EbnfStructureViewFactory"/>
    <iconProvider
      implementation="com.das747.ebnfplugin.lang.EbnfIconProvider"/>
    <lang.refactoringSupport
      language="EBNF"
      implementationClass="com.das747.ebnfplugin.ide.EbnfRefactoringSupportProvider"/>
    <lang.foldingBuilder
      language="EBNF"
      implementationClass="com.das747.ebnfplugin.ide.EbnfFoldingBuilder"/>
    <lang.commenter
      language="EBNF"
      implementationClass="com.das747.ebnfplugin.ide.EbnfCommenter"/>
    <lang.formatter
      language="EBNF"
      implementationClass="com.das747.ebnfplugin.ide.formatter.EbnfFormattingModelBuilder"/>
    <localInspection
      language="EBNF"
      implementationClass="com.das747.ebnfplugin.ide.inspections.EbnfUnusedDeclarationInspection"
      enabledByDefault="true"
      groupPath="EBNF"
      groupBundle="messages.InspectionsBundle"
      groupKey="group.names.probable.bugs"
      displayName="Unused rules"/>
    <localInspection
      language="EBNF"
      implementationClass="com.das747.ebnfplugin.ide.inspections.EbnfMultipleDeclarationsInspection"
      enabledByDefault="true"
      groupPath="EBNF"
      groupBundle="messages.InspectionsBundle"
      groupKey="group.names.probable.bugs"
      displayName="Multiple declarations"/>
    <localInspection
      language="EBNF"
      implementationClass="com.das747.ebnfplugin.ide.inspections.EbnfEqualAlternativeVariantsInspection"
      enabledByDefault="true"
      groupPath="EBNF"
      groupBundle="messages.InspectionsBundle"
      groupKey="group.names.probable.bugs"
      displayName="Equivalent alternative variants"/>
    <localInspection
      language="EBNF"
      implementationClass="com.das747.ebnfplugin.ide.inspections.EbnfRedundantNestingInspection"
      enabledByDefault="true"
      groupPath="EBNF"
      groupBundle="messages.InspectionsBundle"
      groupKey="group.names.probable.bugs"
      displayName="Redundant nesting"/>
    <localInspection
      language="EBNF"
      implementationClass="com.das747.ebnfplugin.ide.inspections.EbnfAlternativePushDownInspection"
      enabledByDefault="true"
      groupPath="EBNF"
      groupBundle="messages.InspectionsBundle"
      groupKey="group.names.probable.bugs"
      displayName="Alternative push down"/>
    <spellchecker.support
      language="EBNF"
      implementationClass="com.das747.ebnfplugin.ide.EbnfSpellcheckingStrategy"/>
    <lang.braceMatcher
      language="EBNF"
      implementationClass="com.das747.ebnfplugin.ide.EbnfBraceMatcher"/>
    <lang.quoteHandler
      language="EBNF"
      implementationClass="com.das747.ebnfplugin.ide.EbnfQuoteHandler"/>
  </extensions>
</idea-plugin>